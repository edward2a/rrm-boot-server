allow booting;
allow bootp;
authoritative;

# Disable dynamic DNS
ddns-update-style none;

# Declare a vendor-specific option buffer for PXE clients:
# Code 1: Multicast IP address of boot file server
# Code 2: UDP port that client should monitor for MTFTP responses
# Code 3: UDP port that MTFTP servers are using to listen for MTFTP requests
# Code 4: Number of seconds a client must listen for activity before trying
#         to start a new MTFTP transfer
# Code 5: Number of seconds a client must listen before trying to restart
#         a MTFTP transfer

#option space PXE;
#option PXE.mtftp-ip               code 1 = ip-address;
#option PXE.mtftp-cport            code 2 = unsigned integer 16;
#option PXE.mtftp-sport            code 3 = unsigned integer 16;
#option PXE.mtftp-tmout            code 4 = unsigned integer 8;
#option PXE.mtftp-delay            code 5 = unsigned integer 8;
#option PXE.discovery-control      code 6 = unsigned integer 8;
#option PXE.discovery-mcast-addr   code 7 = ip-address;
option mtftp-ip               code 1 = ip-address;
option mtftp-cport            code 2 = unsigned integer 16;
option mtftp-sport            code 3 = unsigned integer 16;
option mtftp-tmout            code 4 = unsigned integer 8;
option mtftp-delay            code 5 = unsigned integer 8;
option discovery-control      code 6 = unsigned integer 8;
option discovery-mcast-addr   code 7 = ip-address;
option architecture-type code 93 = unsigned integer 16;

# Declare the subnet where our diskless nodes will live
subnet 192.168.56.0 netmask 255.255.255.0 {

  # Provide PXE clients with appropriate information
  #class "pxeclient" {
    #match if substring(option vendor-class-identifier, 0, 9) = "PXEClient";
    #vendor-option-space PXE;

    # At least one of the vendor-specific PXE options must be set in
    # order for the client boot ROMs to realize that we are a PXE-compliant
    # server.  We set the MCAST IP address to 0.0.0.0 to tell the boot ROM
    # that we can't provide multicast TFTP.

    #option PXE.mtftp-ip 0.0.0.0;
    option mtftp-ip 0.0.0.0;

    # This is the name of the file the boot ROMs should download.
    # Using if group for dealing with multiple architectures
    #filename "pxelinux.0";

    if option architecture-type = 00:00 {
        filename "/boot/pc/lpxelinux.0";
    } elsif option architecture-type = 00:09 {
        filename "/boot/efi64/bootx64.efi";
    } elsif option architecture-type = 00:07 {
        filename "/boot/efi64/bootx64.efi";
    } elsif option architecture-type = 00:06 {
        filename "/boot/efi32/bootia32.efi";
    } else {
        filename "/boot/bios/pxelinux.0";
    }

    option subnet-mask 255.255.255.0;
    #range dynamic-bootp 192.168.56.11 192.168.56.254;
    range 192.168.56.11 192.168.56.254;
    default-lease-time 3600;
    max-lease-time 28800;
    

    # Assume one default gateway for IP traffic will do
    option routers 192.168.56.1;

    # Provide DNS info to clients
    option domain-name-servers 8.8.8.8;
    option domain-name "local-net";

    # Specify the TFTP server to be used
    next-server 192.168.56.2;


  }

  # Provide Etherboot clients with appropriate information
  #class "etherboot" {
    #match if substring(option vendor-class-identifier, 0, 9) = "Etherboot";
    #filename "vmlinuz_arch";
  #}

  # Add one host declaration for each diskless host
#  host slave21 {
#    hardware ethernet 00:02:A5:04:3B:66;
#    fixed-address 192.168.1.21;
#  }
#}

